tfidf_pa = PassiveAggressiveClassifier(max_iter=1000)
tfidf_pa.fit(count_train, y_train)
pred = tfidf_pa.predict(count_test)
score = metrics.accuracy_score(y_test, pred)
print("accuracy:   %0.3f" % score)
cm = metrics.confusion_matrix(y_test, pred, labels=[trump.name, trudeau.name])
plot_confusion_matrix(cm, classes=[trump.name, trudeau.name])
plt.show()

count_pa = PassiveAggressiveClassifier(max_iter=1000)
count_pa.fit(count_train, y_train)
pred = count_pa.predict(count_test)
score = metrics.accuracy_score(y_test, pred)
print("accuracy:   %0.3f" % score)
cm = metrics.confusion_matrix(y_test, pred, labels=[trump.name, trudeau.name])
plot_confusion_matrix(cm, classes=[trump.name, trudeau.name])
